package com.patrones.creacionales.factorymethod;

/**
 * PATR√ìN FACTORY METHOD
 * 
 * Prop√≥sito: Crear objetos sin especificar sus clases exactas.
 * Delega la creaci√≥n a subclases que implementan el m√©todo de f√°brica.
 * 
 * Cu√°ndo usar:
 * - Cuando no sabes de antemano qu√© tipos de objetos necesitas
 * - Cuando quieres que las subclases decidan qu√© clase instanciar
 * - Para desacoplar la l√≥gica de creaci√≥n de la l√≥gica de uso
 * 
 * Este ejemplo simula un sistema de creaci√≥n de documentos.
 */
public abstract class CreadorDocumento {
    
    /**
     * M√©todo de f√°brica abstracto
     * Las subclases deben implementar este m√©todo para crear el tipo espec√≠fico
     */
    protected abstract Documento crearDocumento(String titulo);
    
    /**
     * M√©todo template que usa el factory method
     * Define el algoritmo com√∫n para procesar documentos
     */
    public Documento procesarDocumento(String titulo) {
        System.out.println("üè≠ Creando documento...");
        
        // Usar el factory method para crear el documento espec√≠fico
        Documento documento = crearDocumento(titulo);
        
        // Procesar el documento
        documento.procesar();
        
        System.out.println("‚úÖ Documento creado y procesado exitosamente\n");
        return documento;
    }
}

