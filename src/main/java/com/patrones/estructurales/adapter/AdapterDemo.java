package com.patrones.creacionales.adapter;

/**
 * DEMO del patr√≥n Adapter
 * 
 * Este ejemplo demuestra que:
 * 1. La aplicaci√≥n puede usar motores compatibles directamente
 * 2. La aplicaci√≥n puede usar motores incompatibles a trav√©s de un adapter
 * 3. El adapter traduce las llamadas de una interfaz a otra
 * 4. La aplicaci√≥n no necesita conocer las diferencias internas
 */
public class AdapterDemo {
    
    public static void main(String[] args) {
        System.out.println("=== DEMO PATR√ìN ADAPTER ===\n");
        
        // Crear la aplicaci√≥n cliente
        Aplicacion aplicacion = new Aplicacion();
        
        System.out.println("üéØ PROBLEMA: La aplicaci√≥n necesita usar diferentes tipos de motores");
        System.out.println("   - Motor Com√∫n: Compatible directamente ‚úÖ");
        System.out.println("   - Motor Econ√≥mico: Compatible directamente ‚úÖ");
        System.out.println("   - Motor El√©ctrico: Incompatible ‚ùå (necesita adapter)");
        System.out.println();
        
        System.out.println("üîß SOLUCI√ìN: Usar el patr√≥n Adapter para hacer compatible el Motor El√©ctrico");
        System.out.println();
        
        // Demostrar el uso de todos los motores
        aplicacion.usarTodosLosMotores();
        
        // Demostrar el problema sin adapter
        System.out.println("‚ùå === PROBLEMA SIN ADAPTER ===");
        System.out.println("Si intent√°ramos usar MotorElectrico directamente:");
        System.out.println("   MotorElectrico motor = new MotorElectrico();");
        System.out.println("   motor.encender(); // ‚ùå No existe este m√©todo");
        System.out.println("   motor.acelerar(); // ‚ùå No existe este m√©todo");
        System.out.println("   motor.apagar();   // ‚ùå No existe este m√©todo");
        System.out.println();
        
        System.out.println("‚úÖ === SOLUCI√ìN CON ADAPTER ===");
        System.out.println("Con el adapter, podemos usar MotorElectrico como cualquier Motor:");
        System.out.println("   Motor motor = new MotorElectricoAdapter(new MotorElectrico());");
        System.out.println("   motor.encender(); // ‚úÖ Funciona (traduce a conectar() + activar())");
        System.out.println("   motor.acelerar(); // ‚úÖ Funciona (traduce a moverMasRapido())");
        System.out.println("   motor.apagar();   // ‚úÖ Funciona (traduce a detener() + desconectar())");
        System.out.println();
        
        System.out.println("üéâ Demo completado - Adapter permite integrar interfaces incompatibles");
    }
}

