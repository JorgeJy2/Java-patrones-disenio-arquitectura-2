package com.patrones.creacionales.adapter;

/**
 * CLIENTE - La aplicaci√≥n que usa los motores
 * 
 * Esta clase representa la aplicaci√≥n cliente que necesita
 * trabajar con diferentes tipos de motores usando una interfaz uniforme.
 * 
 * La aplicaci√≥n no conoce la diferencia entre motores compatibles
 * y motores que necesitan adaptaci√≥n.
 */
public class Aplicacion {
    
    /**
     * Usar un motor com√∫n (compatible directamente)
     */
    public void usarMotorComun() {
        System.out.println("üöó === USANDO MOTOR COM√öN ===");
        Motor motor = new MotorComun();
        
        System.out.println("\n1. Encendiendo motor com√∫n:");
        motor.encender();
        
        System.out.println("\n2. Acelerando motor com√∫n:");
        motor.acelerar();
        
        System.out.println("\n3. Apagando motor com√∫n:");
        motor.apagar();
        
        System.out.println("‚úÖ Motor com√∫n usado exitosamente\n");
    }
    
    /**
     * Usar un motor econ√≥mico (compatible directamente)
     */
    public void usarMotorEconomico() {
        System.out.println("üí∞ === USANDO MOTOR ECON√ìMICO ===");
        Motor motor = new MotorEconomico();
        
        System.out.println("\n1. Encendiendo motor econ√≥mico:");
        motor.encender();
        
        System.out.println("\n2. Acelerando motor econ√≥mico:");
        motor.acelerar();
        
        System.out.println("\n3. Apagando motor econ√≥mico:");
        motor.apagar();
        
        System.out.println("‚úÖ Motor econ√≥mico usado exitosamente\n");
    }
    
    /**
     * Usar un motor el√©ctrico (requiere adaptaci√≥n)
     * 
     * Aqu√≠ es donde entra en juego el patr√≥n Adapter.
     * La aplicaci√≥n puede usar MotorElectrico como si fuera un Motor normal,
     * gracias al MotorElectricoAdapter.
     */
    public void usarMotorElectrico() {
        System.out.println("‚ö° === USANDO MOTOR EL√âCTRICO (CON ADAPTER) ===");
        
        // Crear el motor el√©ctrico original
        MotorElectrico motorElectricoOriginal = new MotorElectrico();
        
        // Crear el adapter que hace compatible el motor el√©ctrico
        Motor motor = new MotorElectricoAdapter(motorElectricoOriginal);
        
        System.out.println("\n1. Encendiendo motor el√©ctrico (via adapter):");
        motor.encender();
        
        System.out.println("\n2. Acelerando motor el√©ctrico (via adapter):");
        motor.acelerar();
        
        System.out.println("\n3. Apagando motor el√©ctrico (via adapter):");
        motor.apagar();
        
        // Mostrar estado espec√≠fico del motor el√©ctrico
        if (motor instanceof MotorElectricoAdapter) {
            ((MotorElectricoAdapter) motor).mostrarEstadoElectrico();
        }
        
        System.out.println("‚úÖ Motor el√©ctrico usado exitosamente (gracias al adapter)\n");
    }
    
    /**
     * Demostrar el uso de m√∫ltiples motores
     */
    public void usarTodosLosMotores() {
        System.out.println("üè≠ === USANDO TODOS LOS TIPOS DE MOTORES ===");
        System.out.println("La aplicaci√≥n puede usar cualquier motor con la misma interfaz\n");
        
        // Usar motor com√∫n
        usarMotorComun();
        
        // Usar motor econ√≥mico  
        usarMotorEconomico();
        
        // Usar motor el√©ctrico (con adapter)
        usarMotorElectrico();
        
        System.out.println("üéâ Todos los motores funcionan con la misma interfaz!");
    }
}

